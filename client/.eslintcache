[{"D:\\Personal codes\\twitter-clone\\client\\src\\index.js":"1","D:\\Personal codes\\twitter-clone\\client\\src\\reportWebVitals.js":"2","D:\\Personal codes\\twitter-clone\\client\\src\\App.js":"3","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\store.js":"4","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\root-reducer.js":"5","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Bookmarks.jsx":"6","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Profile.jsx":"7","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userReducer.js":"8","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userActions.js":"9","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Header.jsx":"10","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userTypes.js":"11","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Login.jsx":"12","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Signup.jsx":"13","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\UsersProfile\\UserProfile.jsx":"14","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\tweetcard.jsx":"15","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Comment.jsx":"16","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Home.jsx":"17","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Explore\\Explore.jsx":"18","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweets.jsx":"19","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweet.jsx":"20","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\UserSearch.jsx":"21"},{"size":943,"mtime":1611934221419,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1611655652609,"results":"24","hashOfConfig":"23"},{"size":2308,"mtime":1612095330155,"results":"25","hashOfConfig":"23"},{"size":524,"mtime":1611791344733,"results":"26","hashOfConfig":"23"},{"size":413,"mtime":1611781797898,"results":"27","hashOfConfig":"23"},{"size":1926,"mtime":1611922239596,"results":"28","hashOfConfig":"23"},{"size":4120,"mtime":1612138587061,"results":"29","hashOfConfig":"23"},{"size":1729,"mtime":1612132060759,"results":"30","hashOfConfig":"23"},{"size":2795,"mtime":1612104731121,"results":"31","hashOfConfig":"23"},{"size":2723,"mtime":1612183508700,"results":"32","hashOfConfig":"23"},{"size":230,"mtime":1612104500920,"results":"33","hashOfConfig":"23"},{"size":1751,"mtime":1611796375527,"results":"34","hashOfConfig":"23"},{"size":2381,"mtime":1612096153586,"results":"35","hashOfConfig":"23"},{"size":3933,"mtime":1612138590365,"results":"36","hashOfConfig":"23"},{"size":6451,"mtime":1612190331401,"results":"37","hashOfConfig":"23"},{"size":1037,"mtime":1612133393210,"results":"38","hashOfConfig":"23"},{"size":1893,"mtime":1612103739203,"results":"39","hashOfConfig":"23"},{"size":898,"mtime":1612096121349,"results":"40","hashOfConfig":"23"},{"size":377,"mtime":1612095476330,"results":"41","hashOfConfig":"23"},{"size":2940,"mtime":1612190367868,"results":"42","hashOfConfig":"23"},{"size":767,"mtime":1612137873728,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"e1cs8g",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Personal codes\\twitter-clone\\client\\src\\index.js",[],["93","94"],"D:\\Personal codes\\twitter-clone\\client\\src\\reportWebVitals.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\App.js",["95","96"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Bookmarks from './Components/Pages/Bookmarks';\r\nimport Home from './Components/Pages/Home/Home'\r\nimport Explore from './Components/Pages/Explore/Explore';\r\nimport Profile from './Components/Pages/Profile'\r\nimport Tweetcard from './Components/SharedComponents/tweetcard';\r\nimport Login from './Components/Pages/LoginSignup/Login';\r\nimport Signup from './Components/Pages/LoginSignup/Signup';\r\nimport Header from './Components/SharedComponents/Header'\r\nimport UserProfile from './Components/Pages/UsersProfile/UserProfile'\r\n\r\nimport './App.css';\r\nimport { load_user } from './Redux/User/userActions';\r\n\r\n\r\nconst App = ({ isAuthenticated, load_user }) => {\r\n  // console.log(isAuthenticated)\r\n\r\n  useEffect(() => {\r\n    console.log('sss')\r\n    load_user()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n\r\n        {\r\n          isAuthenticated && <Header />\r\n        }\r\n        <Switch>\r\n          <Route path=\"/\" exact render={(props) => !isAuthenticated ? <Login {...props} /> : <Redirect to='/home' />} />\r\n          <Route path=\"/signup\" exact render={(props) => !isAuthenticated ? <Signup {...props} /> : <Redirect to='/home' />} />\r\n          <Route path=\"/home\" exact render={(props) => isAuthenticated ? <Home {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Profile\" exact render={(props) => isAuthenticated ? <Profile {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Profile/:id\" exact render={(props) => isAuthenticated ? <UserProfile {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Explore\" exact render={(props) => isAuthenticated ? <Explore {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Bookmarks\" exact render={(props) => isAuthenticated ? <Bookmarks {...props} /> : <Redirect to='/' />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { isAuthenticated } }) => {\r\n  return {\r\n    isAuthenticated\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    load_user: () => dispatch(load_user())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\store.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\root-reducer.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Bookmarks.jsx",["97","98","99"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TweetCard from '../SharedComponents/tweetcard'\r\n\r\nimport './Bookmarks.css'\r\n\r\nconst Bookmarks = ({ user }) => {\r\n\r\n    const [tweets, setTweets] = useState(null)\r\n    const [bookmarks, setBookmarks] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                setTweets(data.tweets)\r\n                getBookmarks({ user_bookmarks: data.user_bookmarks })\r\n            })\r\n    }\r\n\r\n    const getBookmarks = (obj) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(obj)\r\n        }\r\n        fetch('http://127.0.0.1:8000/tweet/bookmarks', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // window.location.reload()\r\n                console.log('bookmarks', data)\r\n                setBookmarks(data)\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='bookmark'>\r\n            <h1>Bookmarks</h1>\r\n            <div className='tweets'>\r\n                {\r\n                    bookmarks && bookmarks.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Bookmarks)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Profile.jsx",["100","101","102","103"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\n\r\nimport { changeImage } from '../../Redux/User/userActions'\r\nimport TweetCard from '../SharedComponents/tweetcard'\r\n\r\nimport './Profile.css'\r\n\r\n\r\n\r\nconst Profile = ({ user, changeImage, userImage }) => {\r\n    const [tweets, setTweets] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [image, setImage] = useState(userImage)\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setProfile(data)\r\n                setTweets(data.tweets)\r\n            })\r\n    }\r\n\r\n    const uploadImage = (e) => {\r\n        const formData = new FormData()\r\n        formData.append('file', e.target.files[0])\r\n        formData.append('upload_preset', 'pqcz20rh')\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: formData\r\n        };\r\n        fetch('\thttps://api.cloudinary.com/v1_1/dzjchtsxn/image/upload', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('uploaded', data)\r\n\r\n                user.image = data.secure_url\r\n                console.log('dispatched', user)\r\n                changeImage(user)\r\n                // setImage(data.secure_url)\r\n                postImage({ id: user.id, image: data.secure_url })\r\n            });\r\n\r\n    }\r\n\r\n    const postImage = (obj) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(obj)\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/image', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('succes', data)\r\n                // window.location.reload()\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <div className='home__img'></div>\r\n            <div className='profile__details'>\r\n                <div className='profile__img' style={{ backgroundImage: `url(${user.image})` }}>\r\n                    <div className='details__info'>\r\n                        <p className='profile__name'>{profile && profile.name}</p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userTo.length - 1}</span> Following</span></p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userFrom.length - 1}</span> Followers</span></p>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"file\"\r\n                            name=\"file\"\r\n                            // className='user_inputfile'\r\n                            onChange={uploadImage}\r\n                        />\r\n                        <label className='upload' htmlFor=\"file\"><PhotoCameraIcon style={{ color: 'gray' }} /></label>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='tweets'>\r\n                {\r\n                    tweets && tweets.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user, image } }) => {\r\n    return {\r\n        user,\r\n        userImage: image\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeImage: user => dispatch(changeImage(user))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userReducer.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userActions.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Header.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userTypes.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Login.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Signup.jsx",["104"],"import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { register } from '../../../Redux/User/userActions'\r\n\r\nimport './Login.css'\r\n\r\nconst Signup = ({ register }) => {\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    var mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n\r\n    const onChange = e => setData({ ...data, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const { name, email, password } = data\r\n        if (mediumRegex.test(password)) {\r\n            const image = 'https://lh3.googleusercontent.com/proxy/6JI7rDICjHdO7jFlNs2n5ftsSwBFqTj7oU0I_BgJE09kfq22ED4zMBhXfPbRGfMjHUavGSlFxUji0zo8j2A2Hr0tUDO1pk4SjW-_0P__Sjt1d24Q_CRWvA'\r\n            register(name, email, password, image)\r\n        } else {\r\n            enqueueSnackbar('Maan please enter a good password', { variant: 'error', autoHideDuration: 1500 })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='signup'>\r\n            <p className='signup__text'>Create Your Account</p>\r\n            <div className='signup__logo'></div>\r\n            <form className='signup__form' onSubmit={onSubmit}>\r\n                <TextField variant=\"outlined\" type=\"text\" name=\"name\" placeholder=\"Enter Your Name ..\" onChange={e => onChange(e)} required />\r\n                <TextField variant=\"outlined\" type=\"email\" name=\"email\" placeholder=\"Enter Your Email ..\" onChange={e => onChange(e)} required />\r\n                <TextField variant=\"outlined\" type=\"password\" name=\"password\" placeholder=\"Enter Your Password ..\" onChange={e => onChange(e)} required minLength='8' />\r\n                <Button type='submit' color=\"primary\" variant=\"contained\" size=\"large\" value='Signup' style={{ marginTop: '30px' }}> Sign Up </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        register: (name, email, password, image) => dispatch(register(name, email, password, image)),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\UsersProfile\\UserProfile.jsx",["105"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport TweetCard from '../../SharedComponents/tweetcard'\r\n\r\nimport './styles.css'\r\n\r\nconst UserProfile = ({ match, user }) => {\r\n    const [tweets, setTweets] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [followers, setFollowers] = useState([])\r\n    const [follow, setFollow] = useState(true)\r\n    const [followId, setFollowId] = useState(null)\r\n    console.log('followid', followId)\r\n    const id = match.params.id\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [match.params.id])\r\n\r\n    const checkFollow = (profile) => {\r\n        profile.userFrom.forEach((us) => {\r\n            if (us.user_from === user.id) {\r\n                setFollow(false)\r\n                setFollowId(us.id)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setProfile(data)\r\n                setTweets(data.tweets)\r\n                setFollowers(data.userFrom)\r\n                checkFollow(data)\r\n            })\r\n    }\r\n\r\n    const followUser = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ user_from: user.id, user_to: profile.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/followers/', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setFollowers([...followers, data])\r\n                setFollowId(data.id)\r\n                setFollow(false)\r\n            })\r\n    }\r\n\r\n    const unFollowUser = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: followId })\r\n        }\r\n        fetch('http://127.0.0.1:8000/followers/remove', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                // setFollowers([...followers, data])\r\n                setFollow(true)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='userprofile'>\r\n            <div className='home__img'></div>\r\n            <div className='profile__details'>\r\n                <div className='profile__img' style={{ backgroundImage: `url(${profile && profile.image})` }}>\r\n                    <div className='details__info'>\r\n                        <p className='profile__name'>{profile && profile.name}</p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userTo.length - 1}</span> Following</span></p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{followers.length - 1}</span> Followers</span></p>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    follow ? <button onClick={followUser} className='profile__follow'>Follow</button> :\r\n                        <button onClick={unFollowUser} className='profile__follow'>Unfollow</button>\r\n                }\r\n\r\n            </div>\r\n            <div className='tweets'>\r\n                {\r\n                    tweets && tweets.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(UserProfile)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\tweetcard.jsx",["106","107"],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Comment.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Home.jsx",["108","109"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Tweets from './Tweets'\r\nimport Tweet from './Tweet'\r\n\r\nimport './Home.css'\r\n\r\nconst Explore = ({ user }) => {\r\n    const [tweets, setTweets] = useState(null)\r\n    const [following, setFollowing] = useState([])\r\n    console.log('following t', following)\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setTweets(data.tweets)\r\n                getFollowing({ userTo: data.userTo, id: user.id })\r\n            })\r\n    }\r\n\r\n    const getFollowing = (obj) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(obj)\r\n        }\r\n        fetch('http://127.0.0.1:8000/tweet/following', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Following', data)\r\n\r\n                data.sort(function (a, b) {\r\n\r\n                    return new Date(b.created_at) - new Date(a.created_at);\r\n                })\r\n                setFollowing(data)\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='home'>\r\n            <Tweet setTweets={setFollowing} tweets={following} />\r\n            <Tweets tweets={following} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Explore)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Explore\\Explore.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweets.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweet.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\UserSearch.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":25,"column":6,"nodeType":"120","endLine":25,"endColumn":8,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"122","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"123","line":11,"column":12,"nodeType":"116","messageId":"117","endLine":11,"endColumn":18},{"ruleId":"118","severity":1,"message":"124","line":16,"column":8,"nodeType":"120","endLine":16,"endColumn":10,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"122","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"126","line":16,"column":12,"nodeType":"116","messageId":"117","endLine":16,"endColumn":17},{"ruleId":"114","severity":1,"message":"127","line":16,"column":19,"nodeType":"116","messageId":"117","endLine":16,"endColumn":27},{"ruleId":"118","severity":1,"message":"124","line":20,"column":8,"nodeType":"120","endLine":20,"endColumn":10,"suggestions":"128"},{"ruleId":"114","severity":1,"message":"122","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":25,"suggestions":"129"},{"ruleId":"114","severity":1,"message":"130","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":23},{"ruleId":"118","severity":1,"message":"131","line":27,"column":8,"nodeType":"120","endLine":27,"endColumn":10,"suggestions":"132"},{"ruleId":"114","severity":1,"message":"123","line":10,"column":12,"nodeType":"116","messageId":"117","endLine":10,"endColumn":18},{"ruleId":"118","severity":1,"message":"124","line":15,"column":8,"nodeType":"120","endLine":15,"endColumn":10,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Tweetcard' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load_user'. Either include it or remove the dependency array. If 'load_user' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["136"],"'Link' is defined but never used.","'tweets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTweets'. Either include it or remove the dependency array.",["137"],"'image' is assigned a value but never used.","'setImage' is assigned a value but never used.",["138"],["139"],"'SyncRoundedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["140"],["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"144","fix":"151"},"Update the dependencies array to be: [load_user]",{"range":"152","text":"153"},"Update the dependencies array to be: [getTweets]",{"range":"154","text":"155"},{"range":"156","text":"155"},"Update the dependencies array to be: [getTweets, match.params.id]",{"range":"157","text":"158"},"Update the dependencies array to be: [getComments]",{"range":"159","text":"160"},{"range":"161","text":"155"},[935,937],"[load_user]",[412,414],"[getTweets]",[604,606],[596,613],"[getTweets, match.params.id]",[945,947],"[getComments]",[405,407]]