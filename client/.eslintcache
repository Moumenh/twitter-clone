[{"D:\\Personal codes\\twitter-clone\\client\\src\\index.js":"1","D:\\Personal codes\\twitter-clone\\client\\src\\reportWebVitals.js":"2","D:\\Personal codes\\twitter-clone\\client\\src\\App.js":"3","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\store.js":"4","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\root-reducer.js":"5","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Bookmarks.jsx":"6","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Profile.jsx":"7","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userReducer.js":"8","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userActions.js":"9","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Header.jsx":"10","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userTypes.js":"11","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Login.jsx":"12","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Signup.jsx":"13","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\UsersProfile\\UserProfile.jsx":"14","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\tweetcard.jsx":"15","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Comment.jsx":"16","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Home.jsx":"17","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Explore\\Explore.jsx":"18","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweets.jsx":"19","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweet.jsx":"20"},{"size":943,"mtime":1611934221419,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1611655652609,"results":"23","hashOfConfig":"22"},{"size":2308,"mtime":1612095330155,"results":"24","hashOfConfig":"22"},{"size":524,"mtime":1611791344733,"results":"25","hashOfConfig":"22"},{"size":413,"mtime":1611781797898,"results":"26","hashOfConfig":"22"},{"size":1926,"mtime":1611922239596,"results":"27","hashOfConfig":"22"},{"size":2078,"mtime":1611959006101,"results":"28","hashOfConfig":"22"},{"size":1523,"mtime":1611936861601,"results":"29","hashOfConfig":"22"},{"size":2683,"mtime":1612096095798,"results":"30","hashOfConfig":"22"},{"size":1507,"mtime":1611957204185,"results":"31","hashOfConfig":"22"},{"size":201,"mtime":1611781797897,"results":"32","hashOfConfig":"22"},{"size":1751,"mtime":1611796375527,"results":"33","hashOfConfig":"22"},{"size":2381,"mtime":1612096153586,"results":"34","hashOfConfig":"22"},{"size":3925,"mtime":1612030095375,"results":"35","hashOfConfig":"22"},{"size":6673,"mtime":1612030450110,"results":"36","hashOfConfig":"22"},{"size":677,"mtime":1611837683485,"results":"37","hashOfConfig":"22"},{"size":1747,"mtime":1612095437755,"results":"38","hashOfConfig":"22"},{"size":898,"mtime":1612096121349,"results":"39","hashOfConfig":"22"},{"size":377,"mtime":1612095476330,"results":"40","hashOfConfig":"22"},{"size":2894,"mtime":1612097466804,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"e1cs8g",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Personal codes\\twitter-clone\\client\\src\\index.js",[],["87","88"],"D:\\Personal codes\\twitter-clone\\client\\src\\reportWebVitals.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\App.js",["89","90"],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\store.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\root-reducer.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Bookmarks.jsx",["91","92","93"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TweetCard from '../SharedComponents/tweetcard'\r\n\r\nimport './Bookmarks.css'\r\n\r\nconst Bookmarks = ({ user }) => {\r\n\r\n    const [tweets, setTweets] = useState(null)\r\n    const [bookmarks, setBookmarks] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                setTweets(data.tweets)\r\n                getBookmarks({ user_bookmarks: data.user_bookmarks })\r\n            })\r\n    }\r\n\r\n    const getBookmarks = (obj) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(obj)\r\n        }\r\n        fetch('http://127.0.0.1:8000/tweet/bookmarks', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // window.location.reload()\r\n                console.log('bookmarks', data)\r\n                setBookmarks(data)\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='bookmark'>\r\n            <h1>Bookmarks</h1>\r\n            <div className='tweets'>\r\n                {\r\n                    bookmarks && bookmarks.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Bookmarks)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Profile.jsx",["94","95"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TweetCard from '../SharedComponents/tweetcard'\r\n\r\nimport './Profile.css'\r\n\r\n\r\n\r\nconst Profile = ({ user }) => {\r\n    const [tweets, setTweets] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setProfile(data)\r\n                setTweets(data.tweets)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <div className='home__img'></div>\r\n            <div className='profile__details'>\r\n                <div className='profile__img' style={{ backgroundImage: `url(${user.image})` }}>\r\n                    <div className='details__info'>\r\n                        <p className='profile__name'>{profile && profile.name}</p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userTo.length}</span> Following</span></p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userFrom.length}</span> Followers</span></p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='tweets'>\r\n                {\r\n                    tweets && tweets.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Profile)","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userReducer.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userActions.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Header.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userTypes.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Login.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Signup.jsx",["96"],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\UsersProfile\\UserProfile.jsx",["97"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport TweetCard from '../../SharedComponents/tweetcard'\r\n\r\nimport './styles.css'\r\n\r\nconst UserProfile = ({ match, user }) => {\r\n    const [tweets, setTweets] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [followers, setFollowers] = useState([])\r\n    const [follow, setFollow] = useState(true)\r\n    const [followId, setFollowId] = useState(null)\r\n    console.log('followid', followId)\r\n    const id = match.params.id\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [match.params.id])\r\n\r\n    const checkFollow = (profile) => {\r\n        profile.userFrom.forEach((us) => {\r\n            if (us.user_from === user.id) {\r\n                setFollow(false)\r\n                setFollowId(us.id)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setProfile(data)\r\n                setTweets(data.tweets)\r\n                setFollowers(data.userFrom)\r\n                checkFollow(data)\r\n            })\r\n    }\r\n\r\n    const followUser = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ user_from: user.id, user_to: profile.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/followers/', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setFollowers([...followers, data])\r\n                setFollowId(data.id)\r\n                setFollow(false)\r\n            })\r\n    }\r\n\r\n    const unFollowUser = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: followId })\r\n        }\r\n        fetch('http://127.0.0.1:8000/followers/remove', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                // setFollowers([...followers, data])\r\n                setFollow(true)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='userprofile'>\r\n            <div className='home__img'></div>\r\n            <div className='profile__details'>\r\n                <div className='profile__img' style={{ backgroundImage: `url(${profile && profile.image})` }}>\r\n                    <div className='details__info'>\r\n                        <p className='profile__name'>{profile && profile.name}</p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userTo.length}</span> Following</span></p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{followers.length}</span> Followers</span></p>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    follow ? <button onClick={followUser} className='profile__follow'>Follow</button> :\r\n                        <button onClick={unFollowUser} className='profile__follow'>Unfollow</button>\r\n                }\r\n\r\n            </div>\r\n            <div className='tweets'>\r\n                {\r\n                    tweets && tweets.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(UserProfile)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\tweetcard.jsx",["98","99"],"import React, { useState, useEffect } from 'react'\r\nimport './tweetcard.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport SyncRoundedIcon from '@material-ui/icons/SyncRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport BookmarkBorderRoundedIcon from '@material-ui/icons/BookmarkBorderRounded';\r\n\r\n\r\nimport Comment from './Comment'\r\n\r\n\r\nconst Tweetcard = ({ tweet, user }) => {\r\n    const [comments, setComments] = useState([])\r\n    const [likes, setLikes] = useState([])\r\n    const [bookmarks, setBookmarks] = useState([])\r\n    const [comment, setComment] = useState('')\r\n    const [commentShow, setCommentShow] = useState(false)\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        getComments()\r\n    }, [])\r\n\r\n    const getComments = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: tweet.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/tweet/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                setComments(data.comments)\r\n                setLikes(data.tweet_likes)\r\n                setBookmarks(data.tweet_bookmarks)\r\n            })\r\n    }\r\n\r\n\r\n    const postComments = (e) => {\r\n        e.preventDefault()\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ tweet_id: tweet.id, user_id: user.id, content: comment })\r\n        }\r\n        fetch('http://127.0.0.1:8000/comment/', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                setComment('')\r\n                setComments([...comments, data])\r\n            })\r\n    }\r\n\r\n    const postLike = (e) => {\r\n        e.preventDefault()\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ tweet_id: tweet.id, user_id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/like/', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.id) {\r\n                    setLikes([...likes, data])\r\n                } else {\r\n                    throw Error\r\n                }\r\n\r\n            }).catch(() => enqueueSnackbar('You can only like once', { variant: 'error', autoHideDuration: 1500 }))\r\n    }\r\n\r\n    const addBookMark = (e) => {\r\n        e.preventDefault()\r\n        if (user.id !== tweet.user_id) {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ tweet_id: tweet.id, user_id: user.id })\r\n            }\r\n            fetch('http://127.0.0.1:8000/favourite/', requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.id) {\r\n                        setBookmarks([...bookmarks, data])\r\n                        enqueueSnackbar('Saved to your bookmarks', { variant: 'success', autoHideDuration: 1500 })\r\n                    } else {\r\n                        throw Error\r\n                    }\r\n                }).catch(() => enqueueSnackbar('Already Added to your bookmarks', { variant: 'error', autoHideDuration: 1500 }))\r\n\r\n        } else {\r\n            enqueueSnackbar(`maaan its your tweet, you can't add it MR ${user.name}`, { variant: 'warning', autoHideDuration: 1500 })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='tweet-container'>\r\n            <Link to={user.id === tweet.user_id ? `/profile` : `/profile/${tweet.user_id}`}>\r\n                <div className='user'>\r\n                    <div className='userimg' style={{ backgroundImage: `url(${tweet.userImage})` }}></div>\r\n                    <h3 className='username'>{tweet.user}</h3>\r\n                    <small className='date'>{tweet.created_at.split('T')[0]}</small>\r\n                </div>\r\n            </Link>\r\n            <h3 className='content'>{tweet.content}   </h3>\r\n            {\r\n                tweet.image.length > 0 && <div className='postimg' style={{ backgroundImage: `url(${tweet.image})` }}></div>\r\n            }\r\n            <div className='counters' style={{ marginTop: '15px' }}>\r\n                <small className='counter1' style={{ marginRight: '22px' }}>{comments.length} comments</small>\r\n                <small className='counter2' style={{ marginRight: '22px' }}>{bookmarks.length} Saved</small>\r\n                <small className='counter3'>{likes.length} Likes</small>\r\n            </div>\r\n            {/* <div className='line'></div> */}\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', marginTop: '15px' }}>\r\n                <button style={{ display: 'flex', alignItems: 'center' }} onClick={() => setCommentShow(!commentShow)}><AddCommentIcon style={comments.length ? { color: 'green' } : {}} />Comments</button>\r\n                {/* <button className='retweet'><SyncRoundedIcon />Retweet</button> */}\r\n                <button onClick={postLike} style={{ display: 'flex', alignItems: 'center' }}><FavoriteBorderRoundedIcon style={likes.length ? { color: 'red' } : {}} />Likes</button>\r\n                <button onClick={addBookMark} style={{ display: 'flex', alignItems: 'center' }}><BookmarkBorderRoundedIcon style={bookmarks.length ? { color: 'Blue' } : {}} />Saved</button>\r\n            </div>\r\n\r\n            {/* <div className='line'></div> */}\r\n            <div style={{ display: 'flex' }}>\r\n                <div className='myuserimg' style={{ marginTop: '10px', backgroundImage: `url(${user.image})` }}></div>\r\n                <form onSubmit={postComments} style={{ marginTop: '15px', width: '91%' }}>\r\n                    <input className='comment' placeholder='Tweet your reply' onChange={(e) => setComment(e.target.value)} value={comment}></input>\r\n                </form>\r\n            </div>\r\n            {\r\n                commentShow && comments && comments.map((comment, i) => <Comment key={i} comment={comment} />)\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Tweetcard)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Comment.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Home.jsx",["100","101"],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Explore\\Explore.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweets.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Home\\Tweet.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":17},{"ruleId":"110","severity":1,"message":"111","line":25,"column":6,"nodeType":"112","endLine":25,"endColumn":8,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"114","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"115","line":11,"column":12,"nodeType":"108","messageId":"109","endLine":11,"endColumn":18},{"ruleId":"110","severity":1,"message":"116","line":16,"column":8,"nodeType":"112","endLine":16,"endColumn":10,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"114","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"116","line":17,"column":8,"nodeType":"112","endLine":17,"endColumn":10,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"114","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"116","line":19,"column":8,"nodeType":"112","endLine":19,"endColumn":25,"suggestions":"119"},{"ruleId":"106","severity":1,"message":"120","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":23},{"ruleId":"110","severity":1,"message":"121","line":27,"column":8,"nodeType":"112","endLine":27,"endColumn":10,"suggestions":"122"},{"ruleId":"106","severity":1,"message":"115","line":10,"column":12,"nodeType":"108","messageId":"109","endLine":10,"endColumn":18},{"ruleId":"110","severity":1,"message":"116","line":15,"column":8,"nodeType":"112","endLine":15,"endColumn":10,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Tweetcard' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load_user'. Either include it or remove the dependency array. If 'load_user' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"'Link' is defined but never used.","'tweets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTweets'. Either include it or remove the dependency array.",["127"],["128"],["129"],"'SyncRoundedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"134","fix":"141"},"Update the dependencies array to be: [load_user]",{"range":"142","text":"143"},"Update the dependencies array to be: [getTweets]",{"range":"144","text":"145"},{"range":"146","text":"145"},"Update the dependencies array to be: [getTweets, match.params.id]",{"range":"147","text":"148"},"Update the dependencies array to be: [getComments]",{"range":"149","text":"150"},{"range":"151","text":"145"},[935,937],"[load_user]",[412,414],"[getTweets]",[406,408],[596,613],"[getTweets, match.params.id]",[934,936],"[getComments]",[405,407]]