[{"D:\\Personal codes\\twitter-clone\\client\\src\\index.js":"1","D:\\Personal codes\\twitter-clone\\client\\src\\reportWebVitals.js":"2","D:\\Personal codes\\twitter-clone\\client\\src\\App.js":"3","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\store.js":"4","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\root-reducer.js":"5","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Bookmarks.jsx":"6","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Explore.jsx":"7","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Profile.jsx":"8","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userReducer.js":"9","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userActions.js":"10","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Header.jsx":"11","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userTypes.js":"12","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\HomePage\\Home.jsx":"13","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\HomePage\\Tweet.jsx":"14","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Login.jsx":"15","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Signup.jsx":"16","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\UsersProfile\\UserProfile.jsx":"17","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\tweetcard.jsx":"18","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\HomePage\\Tweets.jsx":"19","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Comment.jsx":"20"},{"size":943,"mtime":1611934221419,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1611655652609,"results":"23","hashOfConfig":"22"},{"size":2305,"mtime":1611935360726,"results":"24","hashOfConfig":"22"},{"size":524,"mtime":1611791344733,"results":"25","hashOfConfig":"22"},{"size":413,"mtime":1611781797898,"results":"26","hashOfConfig":"22"},{"size":1926,"mtime":1611922239596,"results":"27","hashOfConfig":"22"},{"size":233,"mtime":1611794553347,"results":"28","hashOfConfig":"22"},{"size":2078,"mtime":1611959006101,"results":"29","hashOfConfig":"22"},{"size":1523,"mtime":1611936861601,"results":"30","hashOfConfig":"22"},{"size":2168,"mtime":1611935558867,"results":"31","hashOfConfig":"22"},{"size":1507,"mtime":1611957204185,"results":"32","hashOfConfig":"22"},{"size":201,"mtime":1611781797897,"results":"33","hashOfConfig":"22"},{"size":946,"mtime":1611956708401,"results":"34","hashOfConfig":"22"},{"size":1774,"mtime":1611934146799,"results":"35","hashOfConfig":"22"},{"size":1751,"mtime":1611796375527,"results":"36","hashOfConfig":"22"},{"size":2377,"mtime":1611936615830,"results":"37","hashOfConfig":"22"},{"size":3925,"mtime":1612030095375,"results":"38","hashOfConfig":"22"},{"size":6554,"mtime":1611962754436,"results":"39","hashOfConfig":"22"},{"size":402,"mtime":1611832796706,"results":"40","hashOfConfig":"22"},{"size":677,"mtime":1611837683485,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"e1cs8g",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Personal codes\\twitter-clone\\client\\src\\index.js",[],["91","92"],"D:\\Personal codes\\twitter-clone\\client\\src\\reportWebVitals.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\App.js",["93","94"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Bookmarks from './Components/Pages/Bookmarks';\r\nimport Explore from './Components/Pages/Explore';\r\nimport Home from './Components/Pages/HomePage/Home';\r\nimport Profile from './Components/Pages/Profile'\r\nimport Tweetcard from './Components/SharedComponents/tweetcard';\r\nimport Login from './Components/Pages/LoginSignup/Login';\r\nimport Signup from './Components/Pages/LoginSignup/Signup';\r\nimport Header from './Components/SharedComponents/Header'\r\nimport UserProfile from './Components/Pages/UsersProfile/UserProfile'\r\n\r\nimport './App.css';\r\nimport { load_user } from './Redux/User/userActions';\r\n\r\n\r\nconst App = ({ isAuthenticated, load_user }) => {\r\n  // console.log(isAuthenticated)\r\n\r\n  useEffect(() => {\r\n    console.log('sss')\r\n    load_user()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n\r\n        {\r\n          isAuthenticated && <Header />\r\n        }\r\n        <Switch>\r\n          <Route path=\"/\" exact render={(props) => !isAuthenticated ? <Login {...props} /> : <Redirect to='/home' />} />\r\n          <Route path=\"/signup\" exact render={(props) => !isAuthenticated ? <Signup {...props} /> : <Redirect to='/home' />} />\r\n          <Route path=\"/home\" exact render={(props) => isAuthenticated ? <Home {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Profile\" exact render={(props) => isAuthenticated ? <Profile {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Profile/:id\" exact render={(props) => isAuthenticated ? <UserProfile {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Explore\" exact render={(props) => isAuthenticated ? <Explore {...props} /> : <Redirect to='/' />} />\r\n          <Route path=\"/Bookmarks\" exact render={(props) => isAuthenticated ? <Bookmarks {...props} /> : <Redirect to='/' />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { isAuthenticated } }) => {\r\n  return {\r\n    isAuthenticated\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    load_user: () => dispatch(load_user())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\store.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\root-reducer.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Bookmarks.jsx",["95","96","97"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TweetCard from '../SharedComponents/tweetcard'\r\n\r\nimport './Bookmarks.css'\r\n\r\nconst Bookmarks = ({ user }) => {\r\n\r\n    const [tweets, setTweets] = useState(null)\r\n    const [bookmarks, setBookmarks] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                setTweets(data.tweets)\r\n                getBookmarks({ user_bookmarks: data.user_bookmarks })\r\n            })\r\n    }\r\n\r\n    const getBookmarks = (obj) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(obj)\r\n        }\r\n        fetch('http://127.0.0.1:8000/tweet/bookmarks', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // window.location.reload()\r\n                console.log('bookmarks', data)\r\n                setBookmarks(data)\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='bookmark'>\r\n            <h1>Bookmarks</h1>\r\n            <div className='tweets'>\r\n                {\r\n                    bookmarks && bookmarks.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Bookmarks)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Explore.jsx",["98"],"import React from 'react'\r\nimport './Explore.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Explore = () => {\r\n    return (\r\n        <div>\r\n            <h1>Explore</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Explore","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\Profile.jsx",["99","100"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TweetCard from '../SharedComponents/tweetcard'\r\n\r\nimport './Profile.css'\r\n\r\n\r\n\r\nconst Profile = ({ user }) => {\r\n    const [tweets, setTweets] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/user/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setProfile(data)\r\n                setTweets(data.tweets)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <div className='home__img'></div>\r\n            <div className='profile__details'>\r\n                <div className='profile__img' style={{ backgroundImage: `url(${user.image})` }}>\r\n                    <div className='details__info'>\r\n                        <p className='profile__name'>{profile && profile.name}</p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userTo.length}</span> Following</span></p>\r\n                        <p><span className='follow'><span style={{ marginRight: '7px', fontWeight: '600' }}>{profile && profile.userFrom.length}</span> Followers</span></p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='tweets'>\r\n                {\r\n                    tweets && tweets.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Profile)","D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userReducer.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userActions.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Header.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Redux\\User\\userTypes.js",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\HomePage\\Home.jsx",["101"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Tweet from './Tweet'\r\nimport Tweets from './Tweets'\r\n\r\nimport './Home.css'\r\nconst Home = () => {\r\n\r\n    const [tweets, setTweets] = useState(null)\r\n    // console.log('changed', tweets)\r\n\r\n    useEffect(() => {\r\n        getTweets()\r\n    }, [])\r\n\r\n    const getTweets = () => {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('http://127.0.0.1:8000/tweet/', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setTweets(data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='home'>\r\n\r\n            <Tweet setTweets={setTweets} tweets={tweets} />\r\n            <Tweets tweets={tweets} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Home","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\HomePage\\Tweet.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Login.jsx",[],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\LoginSignup\\Signup.jsx",["102"],"import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { register } from '../../../Redux/User/userActions'\r\n\r\nimport './Login.css'\r\n\r\nconst Signup = ({ register }) => {\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    var mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n\r\n    const onChange = e => setData({ ...data, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const { name, email, password } = data\r\n        if (mediumRegex.test(password)) {\r\n            const image = 'https://lh3.googleusercontent.com/proxy/6JI7rDICjHdO7jFlNs2n5ftsSwBFqTj7oU0I_BgJE09kfq22ED4zMBhXfPbRGfMjHUavGSlFxUji0zo8j2A2Hr0tUDO1pk4SjW-_0P__Sjt1d24Q_CRWvA'\r\n            register(name, email, password, image)\r\n        } else {\r\n            enqueueSnackbar('Maan please enter a good password', { variant: 'error', autoHideDuration: 1500 })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='signup'>\r\n            <p className='signup__text'>Create Your Account</p>\r\n            <div className='signup__logo'></div>\r\n            <form className='signup__form' onSubmit={onSubmit}>\r\n                <TextField variant=\"outlined\" type=\"text\" name=\"name\" placeholder=\"Enter Your Name ..\" onChange={e => onChange(e)} required />\r\n                <TextField variant=\"outlined\" type=\"email\" name=\"email\" placeholder=\"Enter Your Email ..\" onChange={e => onChange(e)} required />\r\n                <TextField variant=\"outlined\" type=\"password\" name=\"password\" placeholder=\"Enter Your Password ..\" onChange={e => onChange(e)} required minLength='8' />\r\n                <Button type='submit' color=\"primary\" variant=\"contained\" size=\"large\" value='Signup' style={{ marginTop: '30px' }}> Sign Up </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        register: (name, email, password, image) => dispatch(register(name, email, password, image)),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\UsersProfile\\UserProfile.jsx",["103"],"D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\tweetcard.jsx",["104","105"],"import React, { useState, useEffect } from 'react'\r\nimport './tweetcard.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport SyncRoundedIcon from '@material-ui/icons/SyncRounded';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport BookmarkBorderRoundedIcon from '@material-ui/icons/BookmarkBorderRounded';\r\n\r\n\r\nimport Comment from './Comment'\r\n\r\n\r\nconst Tweetcard = ({ tweet, user }) => {\r\n    const [comments, setComments] = useState([])\r\n    const [likes, setLikes] = useState([])\r\n    const [bookmarks, setBookmarks] = useState([])\r\n    const [comment, setComment] = useState('')\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        getComments()\r\n    }, [])\r\n\r\n    const getComments = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: tweet.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/tweet/details', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                setComments(data.comments)\r\n                setLikes(data.tweet_likes)\r\n                setBookmarks(data.tweet_bookmarks)\r\n            })\r\n    }\r\n\r\n\r\n    const postComments = (e) => {\r\n        e.preventDefault()\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ tweet_id: tweet.id, user_id: user.id, content: comment })\r\n        }\r\n        fetch('http://127.0.0.1:8000/comment/', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                setComment('')\r\n                setComments([...comments, data])\r\n            })\r\n    }\r\n\r\n    const postLike = (e) => {\r\n        e.preventDefault()\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ tweet_id: tweet.id, user_id: user.id })\r\n        }\r\n        fetch('http://127.0.0.1:8000/like/', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.id) {\r\n                    setLikes([...likes, data])\r\n                } else {\r\n                    throw Error\r\n                }\r\n\r\n            }).catch(() => enqueueSnackbar('You can only like once', { variant: 'error', autoHideDuration: 1500 }))\r\n    }\r\n\r\n    const addBookMark = (e) => {\r\n        e.preventDefault()\r\n        if (user.id !== tweet.user_id) {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ tweet_id: tweet.id, user_id: user.id })\r\n            }\r\n            fetch('http://127.0.0.1:8000/favourite/', requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.id) {\r\n                        setBookmarks([...bookmarks, data])\r\n                        enqueueSnackbar('Saved to your bookmarks', { variant: 'success', autoHideDuration: 1500 })\r\n                    } else {\r\n                        throw Error\r\n                    }\r\n                }).catch(() => enqueueSnackbar('Already Added to your bookmarks', { variant: 'error', autoHideDuration: 1500 }))\r\n\r\n        } else {\r\n            enqueueSnackbar(`maaan its your tweet, you can't add it MR ${user.name}`, { variant: 'warning', autoHideDuration: 1500 })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='tweet-container'>\r\n            <Link to={user.id === tweet.user_id ? `/profile` : `/profile/${tweet.user_id}`}>\r\n                <div className='user'>\r\n                    <div className='userimg' style={{ backgroundImage: `url(${tweet.userImage})` }}></div>\r\n                    <h3 className='username'>{tweet.user}</h3>\r\n                    <small className='date'>{tweet.created_at.split('T')[0]}</small>\r\n                </div>\r\n            </Link>\r\n            <h3 className='content'>{tweet.content}   </h3>\r\n            {\r\n                tweet.image.length > 0 && <div className='postimg' style={{ backgroundImage: `url(${tweet.image})` }}></div>\r\n            }\r\n            <div className='counters' style={{ marginTop: '15px' }}>\r\n                <small className='counter1' style={{ marginRight: '22px' }}>{comments.length} comments</small>\r\n                <small className='counter2' style={{ marginRight: '22px' }}>{bookmarks.length} Saved</small>\r\n                <small className='counter3'>{likes.length} Likes</small>\r\n            </div>\r\n            {/* <div className='line'></div> */}\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', marginTop: '15px' }}>\r\n                <button style={{ display: 'flex', alignItems: 'center' }}><AddCommentIcon style={comments.length ? { color: 'green' } : {}} />Comments</button>\r\n                {/* <button className='retweet'><SyncRoundedIcon />Retweet</button> */}\r\n                <button onClick={postLike} style={{ display: 'flex', alignItems: 'center' }}><FavoriteBorderRoundedIcon style={likes.length ? { color: 'red' } : {}} />Likes</button>\r\n                <button onClick={addBookMark} style={{ display: 'flex', alignItems: 'center' }}><BookmarkBorderRoundedIcon style={bookmarks.length ? { color: 'Blue' } : {}} />Saved</button>\r\n            </div>\r\n\r\n            {/* <div className='line'></div> */}\r\n            <div style={{ display: 'flex' }}>\r\n                <div className='myuserimg' style={{ marginTop: '10px', backgroundImage: `url(${user.image})` }}></div>\r\n                <form onSubmit={postComments} style={{ marginTop: '15px', width: '91%' }}>\r\n                    <input className='comment' placeholder='Tweet your reply' onChange={(e) => setComment(e.target.value)} value={comment}></input>\r\n                </form>\r\n            </div>\r\n            {\r\n                comments && comments.map((comment, i) => <Comment key={i} comment={comment} />)\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Tweetcard)","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\Pages\\HomePage\\Tweets.jsx",["106","107"],"import React, { useEffect, useState } from 'react'\r\nimport TweetCard from '../../SharedComponents/tweetcard'\r\n\r\nconst Tweets = ({ tweets }) => {\r\n    // console.log('here', tweets)\r\n\r\n    return (\r\n        <div className='tweets'>\r\n            {\r\n                tweets && tweets.map((tweet, id) => <TweetCard key={id} tweet={tweet} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweets","D:\\Personal codes\\twitter-clone\\client\\src\\Components\\SharedComponents\\Comment.jsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":25,"column":6,"nodeType":"118","endLine":25,"endColumn":8,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":11,"column":12,"nodeType":"114","messageId":"115","endLine":11,"endColumn":18},{"ruleId":"116","severity":1,"message":"122","line":16,"column":8,"nodeType":"118","endLine":16,"endColumn":10,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"120","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"122","line":17,"column":8,"nodeType":"118","endLine":17,"endColumn":10,"suggestions":"124"},{"ruleId":"112","severity":1,"message":"120","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"116","severity":1,"message":"122","line":19,"column":8,"nodeType":"118","endLine":19,"endColumn":25,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":23},{"ruleId":"116","severity":1,"message":"127","line":26,"column":8,"nodeType":"118","endLine":26,"endColumn":10,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"129","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"130","line":1,"column":28,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Tweetcard' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load_user'. Either include it or remove the dependency array. If 'load_user' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["133"],"'Link' is defined but never used.","'tweets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTweets'. Either include it or remove the dependency array.",["134"],["135"],["136"],"'SyncRoundedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["137"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [load_user]",{"range":"147","text":"148"},"Update the dependencies array to be: [getTweets]",{"range":"149","text":"150"},{"range":"151","text":"150"},"Update the dependencies array to be: [getTweets, match.params.id]",{"range":"152","text":"153"},"Update the dependencies array to be: [getComments]",{"range":"154","text":"155"},[932,934],"[load_user]",[412,414],"[getTweets]",[406,408],[596,613],"[getTweets, match.params.id]",[875,877],"[getComments]"]